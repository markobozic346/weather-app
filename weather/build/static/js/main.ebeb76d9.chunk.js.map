{"version":3,"sources":["components/Weather.js","components/App.js","index.js"],"names":["Weather","code","cityName","temperatureInfo","weatherInfo","className","Math","round","temp","description","src","icon","feels_like","temp_min","temp_max","App","useState","data","setData","change","setChange","setCityName","useEffect","a","fetch","process","response","json","isCityEntered","fetchData","type","placeholder","onChange","e","target","value","onClick","cod","name","main","weather","ReactDOM","render","document","getElementById"],"mappings":"+PA0BeA,MAxBf,YAAkE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,YAE/C,OAEc,MAATH,EACA,qBAAKI,UAAU,oBAAf,SAGMF,GAAmBC,GAAgB,qCAErC,oBAAIC,UAAU,YAAd,SAA2BH,IAC3B,qBAAIG,UAAU,QAAd,cAAwBC,KAAKC,MAAMJ,EAAgBK,MAAnD,UACA,mBAAGH,UAAU,cAAb,SAA4BD,EAAY,GAAGK,cAC3C,qBAAKJ,UAAU,OAAOK,IAAG,0CAAqCN,EAAY,GAAGO,KAApD,UACzB,oBAAGN,UAAU,aAAb,yBAAsC,uBAAMA,UAAU,SAAhB,UAA0BC,KAAKC,MAAMJ,EAAgBS,YAArD,aACtC,oBAAGP,UAAU,WAAb,kBAA6B,uBAAMA,UAAU,SAAhB,UAA0BC,KAAKC,MAAMJ,EAAgBU,UAArD,aAC7B,oBAAGR,UAAU,WAAb,kBAA6B,uBAAMA,UAAU,SAAhB,UAA0BC,KAAKC,MAAMJ,EAAgBW,UAArD,UAA7B,YAII,uDCsBFC,MAxCf,WAAe,MAGWC,mBAAS,IAHpB,mBAGNC,EAHM,KAGAC,EAHA,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOmBJ,mBAAS,IAP5B,mBAONd,EAPM,KAOImB,EAPJ,KASbC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACuBC,MAAM,qDAAD,OAC4BtB,EAD5B,+BAC2DuB,qCAFvF,cACMC,EADN,gBAImBA,EAASC,OAJ5B,OAIMV,EAJN,OAKEC,EAAQD,GALV,4CADc,sBAWbW,KAXc,WAAD,wBAWMC,KAEnB,CAAC3B,IAGJ,IAAI0B,EAAgB,iBACJ,KAAb1B,GAGH,OAAO,sBAAKG,UAAU,MAAf,UACL,sBAAKA,UAAU,kBAAf,UACE,uBAAOyB,KAAK,OAAOzB,UAAU,aAAa0B,YAAY,kBAAiBC,SAAU,SAAAC,GAAC,OAAIb,EAAUa,EAAEC,OAAOC,UACzG,wBAAQ9B,UAAW,aAAY+B,QAAS,WAAOf,EAAYF,IAA3D,yBAGHS,KAAmB,cAAC,EAAD,CAAS3B,KAAMgB,EAAKoB,IAAKnC,SAAUe,EAAKqB,KAAMnC,gBAAiBc,EAAKsB,KAAMnC,YAAaa,EAAKuB,cCjClHC,IAASC,OAEL,cAAC,EAAD,IAEDC,SAASC,eAAe,W","file":"static/js/main.ebeb76d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Weather.css'\r\nfunction Weather({code, cityName, temperatureInfo, weatherInfo}) {\r\n    \r\n    return (\r\n        // checks if city is found\r\n        (code === 200) ?\r\n         <div className=\"weather-container\">\r\n             \r\n            {/* Checks if props are not undefined */}\r\n             {(temperatureInfo && weatherInfo) && <> \r\n                \r\n             <h3 className='city-name'>{cityName}</h3>\r\n             <h2 className='value'> {Math.round(temperatureInfo.temp)}째</h2>\r\n             <p className=\"description\">{weatherInfo[0].description}</p>\r\n             <img className='icon' src={`http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`}/>\r\n             <p className=\"feels-like\">Feels like: <span className='bigger'>{Math.round(temperatureInfo.feels_like)}째</span></p>\r\n             <p className=\"temp-min\">min: <span className='bigger'>{Math.round(temperatureInfo.temp_min)}째</span></p>\r\n             <p className=\"temp-min\">max: <span className='bigger'>{Math.round(temperatureInfo.temp_max)}째</span> </p>\r\n             \r\n             </>}\r\n        {/* if city is not found show: */}\r\n        </div> : <>City not found</>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Weather from './Weather';\n\nfunction App() {\n\n  //data from api\n  const [data, setData] = useState(\"\");\n\n  //data from input field\n  const [change, setChange] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  \n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch(\n       `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${process.env.REACT_APP_API_KEY}`\n      );\n      let data = await response.json();\n      setData(data);\n      \n    }\n\n    // if true call fetchData function\n     isCityEntered() && fetchData() ;\n    \n  }, [cityName]);\n\n  // checks if city is entered\n  var isCityEntered = () => (\n    (cityName !== \"\") ? true : false\n  )\n  \n  return <div className=\"App\">\n    <div className=\"input-container\">\n      <input type='text' className='city-input' placeholder=\"Enter City Name\"onChange={e => setChange(e.target.value)}/>\n      <button className= 'btn-search'onClick={() => {setCityName(change)}}>Get Data</button>\n    </div>\n    {/* Renders Weather component only if city is entered */}\n  {isCityEntered() && <Weather code={data.cod} cityName={data.name} temperatureInfo={data.main} weatherInfo={data.weather}/>}\n  </div>\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  \n    <App />\n  \n  ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}