{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspire e15\\\\Desktop\\\\projects\\\\weather-app\\\\weather\\\\src\\\\components\\\\Weather.js\";\nimport React from \"react\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather({\n  code,\n  cityName,\n  temperatureInfo,\n  weatherInfo\n}) {\n  const htmlData = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"city-name\",\n      children: cityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"value\",\n      children: [\" \", Math.round(temperatureInfo.temp), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: weatherInfo[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: `http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feels-like\",\n      children: [\"Feels like:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bigger\",\n        children: [Math.round(temperatureInfo.feels_like), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"temp-min\",\n      children: [\"min:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bigger\",\n        children: [Math.round(temperatureInfo.temp_min), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"temp-min\",\n      children: [\"max:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bigger\",\n        children: [Math.round(temperatureInfo.temp_max), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return (// checks if city is found\n    code === 200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: temperatureInfo && weatherInfo && htmlData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this) :\n    /*#__PURE__*/\n    // display if city is not found\n    _jsxDEV(_Fragment, {\n      children: \"City not found\"\n    }, void 0, false)\n  );\n}\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/aspire e15/Desktop/projects/weather-app/weather/src/components/Weather.js"],"names":["React","Weather","code","cityName","temperatureInfo","weatherInfo","htmlData","Math","round","temp","description","icon","feels_like","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;;AACA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,eAAlB;AAAmCC,EAAAA;AAAnC,CAAjB,EAAmE;AAEjE,QAAMC,QAAQ,GAAG,mBACf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BH;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,sBAAwBI,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACK,IAA3B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBAA4BJ,WAAW,CAAC,CAAD,CAAX,CAAeK;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,GAAG,EAAG,mCAAkCL,WAAW,CAAC,CAAD,CAAX,CAAeM,IAAK;AAF9D;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,6CAEE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,mBACGJ,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACQ,UAA3B,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,sCAEE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,mBAA0BL,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACS,QAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAkBE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,sCAEE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,mBAA0BN,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACU,QAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;;AA0BA,SACE;AACAZ,IAAAA,IAAI,KAAK,GAAT,gBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAEIE,eAAe,IAAIC,WAApB,IAAoCC,QAAQ;AAF/C;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAOI;AACF;AAAA;AAAA;AAVJ;AAaD;;KAzCQL,O;AA2CT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Weather.css\";\r\nfunction Weather({ code, cityName, temperatureInfo, weatherInfo }) {\r\n\r\n  const htmlData = () => (\r\n    <>\r\n      <h3 className=\"city-name\">{cityName}</h3>\r\n      <h2 className=\"value\"> {Math.round(temperatureInfo.temp)}째</h2>\r\n      <p className=\"description\">{weatherInfo[0].description}</p>\r\n      <img\r\n        className=\"icon\"\r\n        src={`http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`}\r\n      />\r\n      <p className=\"feels-like\">\r\n        Feels like:\r\n        <span className=\"bigger\">\r\n          {Math.round(temperatureInfo.feels_like)}째\r\n        </span>\r\n      </p>\r\n      <p className=\"temp-min\">\r\n        min:\r\n        <span className=\"bigger\">{Math.round(temperatureInfo.temp_min)}째</span>\r\n      </p>\r\n      <p className=\"temp-min\">\r\n        max:\r\n        <span className=\"bigger\">{Math.round(temperatureInfo.temp_max)}째</span>\r\n      </p>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    // checks if city is found\r\n    code === 200 ? (\r\n      <div className=\"weather-container\">\r\n        {/* if props are not undefined show data*/}\r\n        {(temperatureInfo && weatherInfo) && htmlData()}\r\n        \r\n      </div>\r\n    ) : (\r\n        // display if city is not found\r\n      <>City not found</>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}