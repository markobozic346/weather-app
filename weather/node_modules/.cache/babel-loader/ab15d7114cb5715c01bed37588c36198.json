{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspire e15\\\\Desktop\\\\projects\\\\weather-app\\\\weather\\\\src\\\\components\\\\Weather.js\";\nimport React from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather({\n  code,\n  cityName,\n  temperatureInfo,\n  weatherInfo\n}) {\n  return (// checks if city is found\n    code === 200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: temperatureInfo && weatherInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"city-name\",\n          children: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"value\",\n          children: [\" \", Math.round(temperatureInfo.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: weatherInfo[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: `http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feels-like\",\n          children: [\"Feels like: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bigger\",\n            children: [Math.round(temperatureInfo.feels_like), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temp-min\",\n          children: [\"min: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bigger\",\n            children: [Math.round(temperatureInfo.temp_min), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temp-min\",\n          children: [\"max: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bigger\",\n            children: [Math.round(temperatureInfo.temp_max), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 43\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"City not found\"\n    }, void 0, false)\n  );\n}\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/aspire e15/Desktop/projects/weather-app/weather/src/components/Weather.js"],"names":["React","Weather","code","cityName","temperatureInfo","weatherInfo","Math","round","temp","description","icon","feels_like","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;;AACA,SAASC,OAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,eAAjB;AAAkCC,EAAAA;AAAlC,CAAjB,EAAiE;AAE7D,SACI;AACCH,IAAAA,IAAI,KAAK,GAAV,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAGME,eAAe,IAAIC,WAApB,iBAAoC;AAAA,gCAErC;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,oBAA2BF;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFqC,eAGrC;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,0BAAwBG,IAAI,CAACC,KAAL,CAAWH,eAAe,CAACI,IAA3B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHqC,eAIrC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BH,WAAW,CAAC,CAAD,CAAX,CAAeI;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAJqC,eAKrC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAG,mCAAkCJ,WAAW,CAAC,CAAD,CAAX,CAAeK,IAAK;AAAlF;AAAA;AAAA;AAAA;AAAA,gBALqC,eAMrC;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,kDAAsC;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,uBAA0BJ,IAAI,CAACC,KAAL,CAAWH,eAAe,CAACO,UAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANqC,eAOrC;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,2CAA6B;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,uBAA0BL,IAAI,CAACC,KAAL,CAAWH,eAAe,CAACQ,QAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPqC,eAQrC;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,2CAA6B;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,uBAA0BN,IAAI,CAACC,KAAL,CAAWH,eAAe,CAACS,QAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBARqC;AAAA;AAHzC;AAAA;AAAA;AAAA;AAAA,YADD,gBAgBS;AAAA;AAAA;AAlBb;AAoBH;;KAtBQZ,O;AAwBT,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport './Weather.css'\r\nfunction Weather({code, cityName, temperatureInfo, weatherInfo}) {\r\n    \r\n    return (\r\n        // checks if city is found\r\n        (code === 200) ?\r\n         <div className=\"weather-container\">\r\n             \r\n            {/* Checks if props are not undefined */}\r\n             {(temperatureInfo && weatherInfo) && <> \r\n                \r\n             <h3 className='city-name'>{cityName}</h3>\r\n             <h2 className='value'> {Math.round(temperatureInfo.temp)}째</h2>\r\n             <p className=\"description\">{weatherInfo[0].description}</p>\r\n             <img className='icon' src={`http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`}/>\r\n             <p className=\"feels-like\">Feels like: <span className='bigger'>{Math.round(temperatureInfo.feels_like)}째</span></p>\r\n             <p className=\"temp-min\">min: <span className='bigger'>{Math.round(temperatureInfo.temp_min)}째</span></p>\r\n             <p className=\"temp-min\">max: <span className='bigger'>{Math.round(temperatureInfo.temp_max)}째</span> </p>\r\n             \r\n             </>}\r\n        {/* if city is not found show: */}\r\n        </div> : <>City not found</>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n"]},"metadata":{},"sourceType":"module"}