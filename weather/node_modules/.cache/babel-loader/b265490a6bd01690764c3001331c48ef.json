{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspire e15\\\\Desktop\\\\projects\\\\weather-app\\\\weather\\\\src\\\\components\\\\Weather.js\";\nimport React from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather({\n  code,\n  cityName,\n  temperatureInfo,\n  weatherInfo\n}) {\n  const htmlData = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"city-name\",\n      children: cityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"value\",\n      children: [\" \", Math.round(temperatureInfo.temp), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: weatherInfo[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: `http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feels-like\",\n      children: [\"Feels like: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bigger\",\n        children: [Math.round(temperatureInfo.feels_like), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"temp-min\",\n      children: [\"min: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bigger\",\n        children: [Math.round(temperatureInfo.temp_min), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"temp-min\",\n      children: [\"max: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bigger\",\n        children: [Math.round(temperatureInfo.temp_max), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 38\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n\n  return (// checks if city is found\n    code === 200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: temperatureInfo && weatherInfo && htmlData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"City not found\"\n    }, void 0, false)\n  );\n}\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/aspire e15/Desktop/projects/weather-app/weather/src/components/Weather.js"],"names":["React","Weather","code","cityName","temperatureInfo","weatherInfo","htmlData","Math","round","temp","description","icon","feels_like","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;;AACA,SAASC,OAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,eAAjB;AAAkCC,EAAAA;AAAlC,CAAjB,EAAiE;AAC7D,QAAMC,QAAQ,GAAG,mBAAO;AAAA,4BAEpB;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BH;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFoB,eAGpB;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,sBAAwBI,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACK,IAA3B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHoB,eAIpB;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBAA4BJ,WAAW,CAAC,CAAD,CAAX,CAAeK;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJoB,eAKpB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAG,mCAAkCL,WAAW,CAAC,CAAD,CAAX,CAAeM,IAAK;AAAlF;AAAA;AAAA;AAAA;AAAA,YALoB,eAMpB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,8CAAsC;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,mBAA0BJ,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACQ,UAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YANoB,eAOpB;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,uCAA6B;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,mBAA0BL,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACS,QAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPoB,eAQpB;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,uCAA6B;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,mBAA0BN,IAAI,CAACC,KAAL,CAAWJ,eAAe,CAACU,QAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YARoB;AAAA,kBAAxB;;AAWA,SACI;AACCZ,IAAAA,IAAI,KAAK,GAAV,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAGME,eAAe,IAAIC,WAApB,IAAoCC,QAAQ;AAHjD;AAAA;AAAA;AAAA;AAAA,YADD,gBAMS;AAAA;AAAA;AARb;AAUH;;KAtBQL,O;AAwBT,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport './Weather.css'\r\nfunction Weather({code, cityName, temperatureInfo, weatherInfo}) {\r\n    const htmlData = () => (<> \r\n                \r\n        <h3 className='city-name'>{cityName}</h3>\r\n        <h2 className='value'> {Math.round(temperatureInfo.temp)}째</h2>\r\n        <p className=\"description\">{weatherInfo[0].description}</p>\r\n        <img className='icon' src={`http://openweathermap.org/img/w/${weatherInfo[0].icon}.png`}/>\r\n        <p className=\"feels-like\">Feels like: <span className='bigger'>{Math.round(temperatureInfo.feels_like)}째</span></p>\r\n        <p className=\"temp-min\">min: <span className='bigger'>{Math.round(temperatureInfo.temp_min)}째</span></p>\r\n        <p className=\"temp-min\">max: <span className='bigger'>{Math.round(temperatureInfo.temp_max)}째</span> </p>\r\n        \r\n        </>)\r\n    return (\r\n        // checks if city is found\r\n        (code === 200) ?\r\n         <div className=\"weather-container\">\r\n             \r\n            {/* Checks if props are not undefined */}\r\n             {(temperatureInfo && weatherInfo) && htmlData()}\r\n        {/* if city is not found show: */}\r\n        </div> : <>City not found</>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n"]},"metadata":{},"sourceType":"module"}