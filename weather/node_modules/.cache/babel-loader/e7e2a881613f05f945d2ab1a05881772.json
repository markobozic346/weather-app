{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspire e15\\\\Desktop\\\\weather-app\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport * as Chart from \"react-chartjs-2\";\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      type: \"line\",\n      labels: ['m', 't', 'w', 't', 'f'],\n      datasets: [{\n        label: 'temperature',\n        data: [1, 12, -2, 0, 7, -1],\n        backgroundColor: ['rgba(75, 192, 192, 0.6)'],\n        borderWitdh: 4\n      }]\n    });\n  };\n\n  const [data, setData] = useState(\"\"); // call fetch data function on initialization\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=smederevska%20palanka&units=metric&appid=d7c09da0824a3c72c99771435764c729\");\n      let data = await response.json();\n      setData(data.list);\n    }\n\n    fetchData();\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), console.log(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"1xrczy9q5GVSyqR7d3InpyBVUVo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aspire e15/Desktop/weather-app/weather/src/App.js"],"names":["Chart","React","useEffect","useState","App","chartData","setChartData","chart","type","labels","datasets","label","data","backgroundColor","borderWitdh","setData","fetchData","response","fetch","json","list","console","log"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMI,KAAK,GAAG,MAAM;AAClBD,IAAAA,YAAY,CAAC;AACXE,MAAAA,IAAI,EAAE,MADK;AAEXC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,CAFG;AAGXC,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,KAAK,EAAE,aADE;AAETC,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,EAAH,EAAM,CAAC,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAC,CAAd,CAFG;AAGTC,QAAAA,eAAe,EAAE,CACf,yBADe,CAHR;AAMTC,QAAAA,WAAW,EAAE;AANJ,OAAD;AAHC,KAAD,CAAZ;AAYD,GAbD;;AAgBA,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CApBa,CAqBb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,8HADwB,CAA1B;AAGA,UAAIN,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAAjB;AACAJ,MAAAA,OAAO,CAACH,IAAI,CAACQ,IAAN,CAAP;AACD;;AACDJ,IAAAA,SAAS;AACTT,IAAAA,KAAK;AACN,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACL,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF;AAAb;AAAA;AAAA;AAAA;AAAA,YADK,EAEJgB,OAAO,CAACC,GAAR,CAAYV,IAAZ,CAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID;;GAtCQR,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import * as Chart from \"react-chartjs-2\";\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nfunction App() {\n\n  const[chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      type: \"line\",\n      labels: ['m','t','w','t','f'],\n      datasets: [{\n        label: 'temperature',\n        data: [1,12,-2,0,7,-1],\n        backgroundColor: [\n          'rgba(75, 192, 192, 0.6)'\n        ],\n        borderWitdh: 4\n      }]\n    })\n  }\n\n\n  const [data, setData] = useState(\"\");\n  // call fetch data function on initialization\n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch(\n        \"https://api.openweathermap.org/data/2.5/forecast?q=smederevska%20palanka&units=metric&appid=d7c09da0824a3c72c99771435764c729\"\n      );\n      let data = await response.json();\n      setData(data.list);\n    }\n    fetchData();\n    chart();\n  }, []);\n\n  return <div className=\"App\">\n    <Chart data={chartData}/>\n    {console.log(data)}\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}