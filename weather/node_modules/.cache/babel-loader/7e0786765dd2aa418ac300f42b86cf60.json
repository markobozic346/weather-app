{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/aspire e15/Desktop/projects/weather-app/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/aspire e15/Desktop/projects/weather-app/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/aspire e15/Desktop/projects/weather-app/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./App.css\";import React,{useEffect,useState}from\"react\";import Weather from'./Weather';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//data from api\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];//data from input field\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),change=_useState4[0],setChange=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),cityName=_useState6[0],setCityName=_useState6[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}// if true call fetchData function\nfunction _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(cityName,\"&units=metric&appid=\").concat(process.env.REACT_APP_API_KEY));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setData(data);case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}isCityEntered()&&fetchData();},[cityName]);// checks if city is entered\nvar isCityEntered=function isCityEntered(){return cityName!==\"\"?true:false;};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city-input\",placeholder:\"Enter City Name\",onChange:function onChange(e){return setChange(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-search\",onClick:function onClick(){setCityName(change);},children:\"Get Data\"})]}),isCityEntered()&&/*#__PURE__*/_jsx(Weather,{code:data.cod,cityName:data.name,temperatureInfo:data.main,weatherInfo:data.weather})]});}export default App;","map":{"version":3,"sources":["C:/Users/aspire e15/Desktop/projects/weather-app/weather/src/components/App.js"],"names":["React","useEffect","useState","Weather","App","data","setData","change","setChange","cityName","setCityName","fetchData","fetch","process","env","REACT_APP_API_KEY","response","json","isCityEntered","e","target","value","cod","name","main","weather"],"mappings":"0gBAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEb;AAFa,cAGWF,QAAQ,CAAC,EAAD,CAHnB,wCAGNG,IAHM,eAGAC,OAHA,eAKb;AALa,eAMeJ,QAAQ,CAAC,EAAD,CANvB,yCAMNK,MANM,eAMEC,SANF,8BAOmBN,QAAQ,CAAC,EAAD,CAP3B,yCAONO,QAPM,eAOIC,WAPJ,eASbT,SAAS,CAAC,UAAM,SACCU,CAAAA,SADD,4CAUd;AAVc,yFACd,2KACuBC,CAAAA,KAAK,6DAC4BH,QAD5B,gCAC2DI,OAAO,CAACC,GAAR,CAAYC,iBADvE,EAD5B,QACMC,QADN,qCAImBA,CAAAA,QAAQ,CAACC,IAAT,EAJnB,QAIMZ,IAJN,eAKEC,OAAO,CAACD,IAAD,CAAP,CALF,sDADc,4CAWba,aAAa,IAAMP,SAAS,EAA5B,CAEF,CAbQ,CAaN,CAACF,QAAD,CAbM,CAAT,CAeA;AACA,GAAIS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SACjBT,CAAAA,QAAQ,GAAK,EAAd,CAAoB,IAApB,CAA2B,KADT,EAApB,CAIA,mBAAO,aAAK,SAAS,CAAC,KAAf,wBACL,aAAK,SAAS,CAAC,iBAAf,wBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,YAA7B,CAA0C,WAAW,CAAC,iBAAtD,CAAuE,QAAQ,CAAE,kBAAAU,CAAC,QAAIX,CAAAA,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,EAAlF,EADF,cAEE,eAAQ,SAAS,CAAE,YAAnB,CAA+B,OAAO,CAAE,kBAAM,CAACX,WAAW,CAACH,MAAD,CAAX,CAAoB,CAAnE,sBAFF,GADK,CAMNW,aAAa,iBAAM,KAAC,OAAD,EAAS,IAAI,CAAEb,IAAI,CAACiB,GAApB,CAAyB,QAAQ,CAAEjB,IAAI,CAACkB,IAAxC,CAA8C,eAAe,CAAElB,IAAI,CAACmB,IAApE,CAA0E,WAAW,CAAEnB,IAAI,CAACoB,OAA5F,EANb,GAAP,CASD,CAED,cAAerB,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Weather from './Weather';\n\nfunction App() {\n\n  //data from api\n  const [data, setData] = useState(\"\");\n\n  //data from input field\n  const [change, setChange] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  \n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch(\n       `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${process.env.REACT_APP_API_KEY}`\n      );\n      let data = await response.json();\n      setData(data);\n      \n    }\n\n    // if true call fetchData function\n     isCityEntered() && fetchData() ;\n    \n  }, [cityName]);\n\n  // checks if city is entered\n  var isCityEntered = () => (\n    (cityName !== \"\") ? true : false\n  )\n  \n  return <div className=\"App\">\n    <div className=\"input-container\">\n      <input type='text' className='city-input' placeholder=\"Enter City Name\"onChange={e => setChange(e.target.value)}/>\n      <button className= 'btn-search'onClick={() => {setCityName(change)}}>Get Data</button>\n    </div>\n    {/* Renders Weather component only if city is entered */}\n  {isCityEntered() && <Weather code={data.cod} cityName={data.name} temperatureInfo={data.main} weatherInfo={data.weather}/>}\n  </div>\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}