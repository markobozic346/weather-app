{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspire e15\\\\Desktop\\\\weather-app\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Chart from 'chart.js';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(\"\"); // call fetch data function on initialization\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch('https://api.openweathermap.org/data/2.5/forecast?q=smederevska%20palanka&units=metric&appid=d7c09da0824a3c72c99771435764c729');\n      let data = await response.json();\n      setData(data.list);\n    }\n\n    fetchData();\n  }, []);\n  var ctx = document.getElementById('myChart').getContext('2d');\n  var myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SdShWBeHkV26fLNog65mn1O2hHw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aspire e15/Desktop/weather-app/weather/src/App.js"],"names":["Chart","React","useEffect","useState","App","data","setData","fetchData","response","fetch","json","list","ctx","document","getElementById","getContext","myChart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC,CADe,CAEf;;AACCD,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeK,SAAf,GAA0B;AACxB,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8HAAD,CAA1B;AACA,UAAIJ,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAjB;AACAJ,MAAAA,OAAO,CAACD,IAAI,CAACM,IAAN,CAAP;AAGD;;AACDJ,IAAAA,SAAS;AAET,GAVQ,EAUP,EAVO,CAAT;AAWA,MAAIK,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,UAAnC,CAA8C,IAA9C,CAAV;AACA,MAAIC,OAAO,GAAG,IAAIhB,KAAJ,CAAUY,GAAV,EAAe;AACzBK,IAAAA,IAAI,EAAE,KADmB;AAEzBZ,IAAAA,IAAI,EAAE;AACFa,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,YADA;AAEPf,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;AAGPgB,QAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,QAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,QAAAA,WAAW,EAAE;AAnBN,OAAD;AAFR,KAFmB;AA0BzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH;AADH;AA1BgB,GAAf,CAAd;AAsCC,sBAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAHF;AAQD;;GA7DQxB,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import Chart from 'chart.js';\nimport './App.css';\nimport React,{useEffect, useState} from 'react'\nfunction App() {\nconst [data, setData] = useState(\"\");\n// call fetch data function on initialization\n useEffect(() => {\n  async function fetchData(){\n    let response = await fetch('https://api.openweathermap.org/data/2.5/forecast?q=smederevska%20palanka&units=metric&appid=d7c09da0824a3c72c99771435764c729');\n    let data = await response.json()\n    setData(data.list);\n    \n  \n  }\n  fetchData();\n   \n },[])\n var ctx = document.getElementById('myChart').getContext('2d');\n var myChart = new Chart(ctx, {\n     type: 'bar',\n     data: {\n         labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n         datasets: [{\n             label: '# of Votes',\n             data: [12, 19, 3, 5, 2, 3],\n             backgroundColor: [\n                 'rgba(255, 99, 132, 0.2)',\n                 'rgba(54, 162, 235, 0.2)',\n                 'rgba(255, 206, 86, 0.2)',\n                 'rgba(75, 192, 192, 0.2)',\n                 'rgba(153, 102, 255, 0.2)',\n                 'rgba(255, 159, 64, 0.2)'\n             ],\n             borderColor: [\n                 'rgba(255, 99, 132, 1)',\n                 'rgba(54, 162, 235, 1)',\n                 'rgba(255, 206, 86, 1)',\n                 'rgba(75, 192, 192, 1)',\n                 'rgba(153, 102, 255, 1)',\n                 'rgba(255, 159, 64, 1)'\n             ],\n             borderWidth: 1\n         }]\n     },\n     options: {\n         scales: {\n             yAxes: [{\n                 ticks: {\n                     beginAtZero: true\n                 }\n             }]\n         }\n     }\n });\n\n\n  return (\n\n  \n    <div className=\"App\">\n     <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}